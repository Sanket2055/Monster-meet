{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.components.jsx","components/search/search-box.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","FilteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAEaA,EAAK,SAACC,GAChB,OAAQ,sBAAKC,UAAU,iBAAf,UACH,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BACEN,EAAMI,QAAQG,YCJXC,G,MAAS,SAACR,GAEnB,OACA,qBAAKC,UAAU,WAAf,SACGD,EAAMS,SAASC,KAAI,SAAAN,GAChB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLtBM,G,mBAAU,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAcC,EAAgB,EAAhBA,aACpC,OACI,uBAAOC,KAAK,SACZb,UAAW,SACXW,YAAaA,EACbG,SAAUF,MCkCHG,E,kDAlCb,aAAc,IAAD,8BACX,gBAYDH,aAAa,SAAAI,GACZ,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAZpC,EAAKC,MAAM,CACTb,SAAW,GACXU,YAAY,IAJH,E,qDAOZ,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAExBF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACT,SAASkB,S,oBAKvC,WAEC,MAA+BC,KAAKN,MAA7Bb,EAAP,EAAOA,SAAWU,EAAlB,EAAkBA,YACZU,EAAiBpB,EAASqB,QAAO,SAAA1B,GAAO,OAAEA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAChG,OACE,sBAAK9B,UAAU,MAAf,UACE,oBAAIA,UAAU,KAAd,4BACA,cAAC,EAAD,CAAWW,YAAY,mBACrBC,aAAce,KAAKf,eAGrB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA5BVI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.98acea90.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./card.styles.css\"\r\nexport const Card=(props)=>{\r\n   return( <div className=\"card-contianer\">\r\n        <img alt=\"mosnter\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h1>{props.monster.name}</h1>\r\n        <p>\r\n         {props.monster.email}\r\n        </p>\r\n    </div>)}","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\nimport './card-list.styles.css';\r\nexport const CardList=(props)=>{\r\n\r\n    return(\r\n    <div className='cardlist'>\r\n      {props.monsters.map(monster=>{\r\n          return(<Card key={monster.id} monster={monster}/>)\r\n        })}\r\n    </div>\r\n    );\r\n}","import { placeholder } from \"@babel/types\";\r\nimport React from \"react\";\r\nimport \"./search-box.styles.css\"\r\nexport const  SearchBox=({placeholder , handleChange})=>{\r\n    return(\r\n        <input type=\"search\"\r\n        className =\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange}/>\r\n\r\n    );\r\n\r\n}\r\n","import React, {Component} from 'react';\nimport { CardList } from './components/card-list/card-list.components';\nimport './App.css';\nimport { SearchBox } from './components/search/search-box.components';\n\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      monsters : [] ,\n      searchField:''\n  }\n}\n   componentDidMount(){\n     fetch('https://jsonplaceholder.typicode.com/users')\n     .then(response=>response.json())\n \n     .then(users=>this.setState({monsters:users}));\n   }\n   handleChange=e=>{\n    this.setState({searchField:e.target.value});\n   }\n   render(){\n\n    const {monsters , searchField}=this.state;\n    const FilteredMonsters=monsters.filter(monster=>monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <h1 className=\"tp\">Monsters Meet!</h1>\n        <SearchBox placeholder=\"Search monsters \"\n          handleChange={this.handleChange}\n        />\n       \n        <CardList monsters={FilteredMonsters}/>\n      </div>\n    );\n   }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}